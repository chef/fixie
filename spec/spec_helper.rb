# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
require "chef_fixie/config"

def load_from_config_example
  # load from config file
  config_file = "fixie.conf.example"
  Kernel.load(config_file)
end

def load_from_opscode
  ChefFixie::Config.instance.load_from_pc
end

RSpec.configure do |config|
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = "random"

  # configure specs

  load_from_opscode
  ChefFixie::Config.instance.merge_opts({})
  puts ChefFixie::Config.instance.to_text

  # Horrible shameful hack TODO FIXME
  # We can't include a lot of the SQL code until we configure things, because
  # we inherit from Model e.g.
  # class Users < Sequel::Model(:users)
  require "chef_fixie"
end
